?start: _NL* _value
_value : top_map | top_seq
top_seq: seq_item+
top_map : pair+
pair: pair_key ":" _uon_value
seq_item : "-" _uon_value
_uon_value: scalar | collection

scalar : (escaped_string | string | number) _NL+ 
collection: _NL [_INDENT _value _DEDENT]

pair_key : (string | escaped_string) [key_properties]
key_properties : "(" [_key_property ("," _key_property)*] ")"
_key_property : optional | description
description: "description" "=" string
optional : "optional" "=" (true | false)

true : "true" | "True"
false : "false" | "False"
// TODO: import escaped string perhaps
escaped_string : "\"" WORD+ "\"" | "'" WORD+ "'"
string :  number WORD+ | WORD+
number : DECIMAL | FLOAT_NUMBER | SIGNED_NUMBER
DECIMAL.2 : /0|[1-9]\d*/i
FLOAT_NUMBER.2: /((\d+\.\d*|\.\d+)(e[-+]?\d+)?|\d+(e[-+]?\d+))/i

// Collections types
MAPPING_TYPE: "!!mapping"
SEQUENCE_TYPE: "!!seq"

// Scalar
STR_TYPE: "!!str"

FLOAT_128_TYPE: "!!float128"
FLOAT_64_TYPE: "!!float64"
FLOAT_32_TYPE: "!!float32"

INT_128_TYPE: "!!int128"
INT_64_TYPE: "!!int64"
INT_32_TYPE: "!!int32"

UINT_128_TYPE: "!!uint128"
UINT_64_TYPE: "!!uint64"
UINT_32_TYPE: "!!uint32"

// TODO: folded style strings?
// Priority 2
WORD:  /[^:#()\[\]{}\n\"\'\s]+/
COMMENT: /#[^\n]*/
%import common.SIGNED_NUMBER
%import common.WS_INLINE
%declare _INDENT _DEDENT
%ignore COMMENT
%ignore WS_INLINE
_NL: /(\r?\n[\t ]*)+/